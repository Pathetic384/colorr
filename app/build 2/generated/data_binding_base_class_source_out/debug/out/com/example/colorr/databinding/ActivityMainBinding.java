// Generated by view binder compiler. Do not edit!
package com.example.colorr.databinding;

import android.opengl.GLSurfaceView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.ToggleButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.camera.view.PreviewView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.colorr.R;
import it.mirko.rangeseekbar.RangeSeekBar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView centerPlus;

  @NonNull
  public final Button deuteranopiaButton;

  @NonNull
  public final GLSurfaceView glSurfaceView;

  @NonNull
  public final RelativeLayout main;

  @NonNull
  public final Button propanopiaButton;

  @NonNull
  public final PreviewView pvPreview;

  @NonNull
  public final RangeSeekBar rangeSeekBar;

  @NonNull
  public final RelativeLayout root;

  @NonNull
  public final Button testy;

  @NonNull
  public final TextView textView;

  @NonNull
  public final ToggleButton toggleOverlay;

  @NonNull
  public final Button tritanopiaButton;

  private ActivityMainBinding(@NonNull RelativeLayout rootView, @NonNull TextView centerPlus,
      @NonNull Button deuteranopiaButton, @NonNull GLSurfaceView glSurfaceView,
      @NonNull RelativeLayout main, @NonNull Button propanopiaButton,
      @NonNull PreviewView pvPreview, @NonNull RangeSeekBar rangeSeekBar,
      @NonNull RelativeLayout root, @NonNull Button testy, @NonNull TextView textView,
      @NonNull ToggleButton toggleOverlay, @NonNull Button tritanopiaButton) {
    this.rootView = rootView;
    this.centerPlus = centerPlus;
    this.deuteranopiaButton = deuteranopiaButton;
    this.glSurfaceView = glSurfaceView;
    this.main = main;
    this.propanopiaButton = propanopiaButton;
    this.pvPreview = pvPreview;
    this.rangeSeekBar = rangeSeekBar;
    this.root = root;
    this.testy = testy;
    this.textView = textView;
    this.toggleOverlay = toggleOverlay;
    this.tritanopiaButton = tritanopiaButton;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.centerPlus;
      TextView centerPlus = ViewBindings.findChildViewById(rootView, id);
      if (centerPlus == null) {
        break missingId;
      }

      id = R.id.deuteranopiaButton;
      Button deuteranopiaButton = ViewBindings.findChildViewById(rootView, id);
      if (deuteranopiaButton == null) {
        break missingId;
      }

      id = R.id.glSurfaceView;
      GLSurfaceView glSurfaceView = ViewBindings.findChildViewById(rootView, id);
      if (glSurfaceView == null) {
        break missingId;
      }

      RelativeLayout main = (RelativeLayout) rootView;

      id = R.id.propanopiaButton;
      Button propanopiaButton = ViewBindings.findChildViewById(rootView, id);
      if (propanopiaButton == null) {
        break missingId;
      }

      id = R.id.pvPreview;
      PreviewView pvPreview = ViewBindings.findChildViewById(rootView, id);
      if (pvPreview == null) {
        break missingId;
      }

      id = R.id.rangeSeekBar;
      RangeSeekBar rangeSeekBar = ViewBindings.findChildViewById(rootView, id);
      if (rangeSeekBar == null) {
        break missingId;
      }

      id = R.id.root;
      RelativeLayout root = ViewBindings.findChildViewById(rootView, id);
      if (root == null) {
        break missingId;
      }

      id = R.id.testy;
      Button testy = ViewBindings.findChildViewById(rootView, id);
      if (testy == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.toggleOverlay;
      ToggleButton toggleOverlay = ViewBindings.findChildViewById(rootView, id);
      if (toggleOverlay == null) {
        break missingId;
      }

      id = R.id.tritanopiaButton;
      Button tritanopiaButton = ViewBindings.findChildViewById(rootView, id);
      if (tritanopiaButton == null) {
        break missingId;
      }

      return new ActivityMainBinding((RelativeLayout) rootView, centerPlus, deuteranopiaButton,
          glSurfaceView, main, propanopiaButton, pvPreview, rangeSeekBar, root, testy, textView,
          toggleOverlay, tritanopiaButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
